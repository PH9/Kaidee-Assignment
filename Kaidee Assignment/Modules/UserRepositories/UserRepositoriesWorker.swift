//
//  UserRepositoriesWorker.swift
//  Kaidee Assignment
//
//  Created by Peerapat Prommaha on 21/3/2564 BE.
//  Copyright (c) 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Moya

class UserRepositoriesWorker {
    func getUserRepositories(request: UserRepositories.FetchUserRepositories.Request,completion: @escaping (Result<[RepositoriesModel]?, CommonError>) -> Void) {
        let provider = MoyaProvider<UserServices>(plugins: [CachePolicyPlugin()])
        provider.request(UserServices.getUserRepositories(userName: request.userName)) { result in
            switch result {
            case let .success(response):
                let jsonData = response.data
                let result = try? JSONDecoder().decode([RepositoriesModel].self, from: jsonData)
                completion(.success(result))
            case let .failure(error):
                let commonError = CommonError(status: error.errorCode, error: error.localizedDescription)
                completion(.failure(commonError))
            }
        }
    }
}
